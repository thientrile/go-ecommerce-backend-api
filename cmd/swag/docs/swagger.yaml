definitions:
  model.GetTicketItemByIdOutput:
    properties:
      id:
        type: integer
      stock_available:
        type: integer
      stock_initial:
        type: integer
      ticket_name:
        type: string
    type: object
  model.LoginInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  model.RegisterInput:
    properties:
      verify_key:
        type: string
      verify_purpose:
        type: string
      verify_type:
        type: integer
    required:
    - verify_key
    - verify_purpose
    - verify_type
    type: object
  model.SetupTwoFactorAuthInput:
    properties:
      two_factor_auth_type:
        description: 1:"email" and 2:"sms" or 3:"app"
        type: integer
      two_factor_email:
        description: required if TwoFactorAuthType is "email"
        type: string
    required:
    - two_factor_auth_type
    type: object
  model.TwoFactorVerifyOtp:
    properties:
      two_factor_auth_token:
        type: string
      two_factor_code:
        description: the code to verify
        type: string
      verify_key:
        description: the key to verify
        type: string
    required:
    - two_factor_auth_token
    - two_factor_code
    - verify_key
    type: object
  model.TwoFactorVerifycationInput:
    properties:
      two_factor_auth_type:
        description: 1:"email" and 2:"sms" or 3:"app"
        type: integer
      two_factor_code:
        description: the code to verify
        type: string
    required:
    - two_factor_auth_type
    - two_factor_code
    type: object
  model.UpdatePasswordRegisterInput:
    properties:
      password:
        type: string
      token:
        type: string
    required:
    - password
    - token
    type: object
  model.VerifyInput:
    properties:
      verify_code:
        type: string
      verify_key:
        type: string
    required:
    - verify_code
    - verify_key
    type: object
  response.ErrorResponseData:
    properties:
      code:
        description: status code
        type: integer
      data:
        description: du lieu tra ve
      message:
        description: thong bao loi
        type: string
    type: object
info:
  contact: {}
paths:
  /ticket/item/{id}:
    get:
      consumes:
      - application/json
      description: Lấy thông tin chi tiết của ticket item theo ID
      parameters:
      - description: Ticket Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GetTicketItemByIdOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: Get Ticket Item By ID
      tags:
      - TicketItem
  /user/login:
    post:
      consumes:
      - application/json
      description: Login user and return authentication token
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: User login with credentials
      tags:
      - accounts user
  /user/register:
    post:
      consumes:
      - application/json
      description: Register a new user with OTP
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: Register user with OTP
      tags:
      - accounts user
  /user/setup-2fa:
    post:
      consumes:
      - application/json
      description: Enables two-factor authentication for the user account
      parameters:
      - description: Bearer{token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.SetupTwoFactorAuthInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: Setup two-factor authentication for user
      tags:
      - accounts 2fa
  /user/update-password-register:
    post:
      consumes:
      - application/json
      description: Allows a user to set or update their password after registration
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.UpdatePasswordRegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: Update password after registration
      tags:
      - accounts user
  /user/verify-2fa:
    post:
      consumes:
      - application/json
      description: Verifies the two-factor authentication code for the user account
      parameters:
      - description: Bearer{token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.TwoFactorVerifycationInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: Verify two-factor authentication code
      tags:
      - accounts 2fa
  /user/verify-2fa-otp:
    post:
      consumes:
      - application/json
      description: Verify the OTP for users who have enabled 2FA after login
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.TwoFactorVerifyOtp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: Verify Two-Factor Authentication OTP
      tags:
      - accounts user
  /user/verify-otp:
    post:
      consumes:
      - application/json
      description: Verify the OTP sent to the user
      parameters:
      - description: payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/model.VerifyInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponseData'
      summary: Verify OTP for user when user register
      tags:
      - accounts user
swagger: "2.0"
