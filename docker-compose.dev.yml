# Docker Compose for development mode
# Khởi động các services cần thiết nhưng không khởi động Go backend
name: go-ecommerce-backend-api-dev
services:
  mysql:
    image: mysql:8.0
    container_name: go-ecommerce-mysql-dev
    environment:
      MYSQL_ROOT_PASSWORD: "strongpassword123!"
      MYSQL_DATABASE: "shopDevgo"
    ports:
      - "3306:3306"
    volumes:
      - mysql-data-dev:/var/lib/mysql
      - ./mysql-custom.cnf:/etc/mysql/conf.d/custom.cnf
    networks:
      - go-ecommerce-network-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pstrongpassword123!"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7.2
    container_name: go-ecommerce-redis-dev
    command: ["redis-server", "--requirepass", "strongredispass"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - go-ecommerce-network-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "strongredispass", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: go-ecommerce-zookeeper-dev
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - go-ecommerce-network-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: go-ecommerce-kafka-dev
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://go-ecommerce-kafka-dev:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - go-ecommerce-network-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: go-ecommerce-kafka-ui-dev
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - go-ecommerce-network-dev
    restart: unless-stopped

  # Nginx để proxy tới localhost:8002 thay vì container
  nginx:
    image: nginx:alpine
    container_name: go-ecommerce-nginx-dev
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d/local.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/html:/usr/share/nginx/html:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    networks:
      - go-ecommerce-network-dev
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql-data-dev:
  redis_data_dev:

networks:
  go-ecommerce-network-dev:
    driver: bridge
